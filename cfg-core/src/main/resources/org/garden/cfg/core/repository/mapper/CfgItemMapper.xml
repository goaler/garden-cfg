<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.garden.cfg.core.repository.mapper.CfgItemMapper">
  <resultMap id="BaseResultMap" type="org.garden.cfg.core.repository.entity.CfgItem">
    <id column="item_id" jdbcType="INTEGER" property="itemId" />
    <result column="doc_id" jdbcType="INTEGER" property="docId" />
    <result column="key" jdbcType="VARCHAR" property="key" />
    <result column="value" jdbcType="VARCHAR" property="value" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="position" jdbcType="INTEGER" property="position" />
    <result column="text" jdbcType="VARCHAR" property="text" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_user_code" jdbcType="VARCHAR" property="createUserCode" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_code" jdbcType="VARCHAR" property="updateUserCode" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    item_id, doc_id, `key`, `value`, `comment`, `position`, `text`, `status`, create_user_code, 
    create_time, update_user_code, update_time
  </sql>
  <select id="selectByExample" parameterType="org.garden.cfg.core.repository.entity.CfgItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cfg_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cfg_item
    where item_id = #{itemId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cfg_item
    where item_id = #{itemId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.garden.cfg.core.repository.entity.CfgItemExample">
    delete from cfg_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.garden.cfg.core.repository.entity.CfgItem">
    <selectKey keyProperty="itemId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cfg_item (doc_id, `key`, `value`, 
      `comment`, `position`, `text`, 
      `status`, create_user_code, create_time, 
      update_user_code, update_time)
    values (#{docId,jdbcType=INTEGER}, #{key,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}, 
      #{comment,jdbcType=VARCHAR}, #{position,jdbcType=INTEGER}, #{text,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{createUserCode,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserCode,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.garden.cfg.core.repository.entity.CfgItem">
    <selectKey keyProperty="itemId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cfg_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="docId != null">
        doc_id,
      </if>
      <if test="key != null">
        `key`,
      </if>
      <if test="value != null">
        `value`,
      </if>
      <if test="comment != null">
        `comment`,
      </if>
      <if test="position != null">
        `position`,
      </if>
      <if test="text != null">
        `text`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createUserCode != null">
        create_user_code,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserCode != null">
        update_user_code,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="docId != null">
        #{docId,jdbcType=INTEGER},
      </if>
      <if test="key != null">
        #{key,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=INTEGER},
      </if>
      <if test="text != null">
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createUserCode != null">
        #{createUserCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserCode != null">
        #{updateUserCode,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.garden.cfg.core.repository.entity.CfgItemExample" resultType="java.lang.Long">
    select count(*) from cfg_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cfg_item
    <set>
      <if test="record.itemId != null">
        item_id = #{record.itemId,jdbcType=INTEGER},
      </if>
      <if test="record.docId != null">
        doc_id = #{record.docId,jdbcType=INTEGER},
      </if>
      <if test="record.key != null">
        `key` = #{record.key,jdbcType=VARCHAR},
      </if>
      <if test="record.value != null">
        `value` = #{record.value,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null">
        `comment` = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null">
        `position` = #{record.position,jdbcType=INTEGER},
      </if>
      <if test="record.text != null">
        `text` = #{record.text,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createUserCode != null">
        create_user_code = #{record.createUserCode,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserCode != null">
        update_user_code = #{record.updateUserCode,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cfg_item
    set item_id = #{record.itemId,jdbcType=INTEGER},
      doc_id = #{record.docId,jdbcType=INTEGER},
      `key` = #{record.key,jdbcType=VARCHAR},
      `value` = #{record.value,jdbcType=VARCHAR},
      `comment` = #{record.comment,jdbcType=VARCHAR},
      `position` = #{record.position,jdbcType=INTEGER},
      `text` = #{record.text,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=INTEGER},
      create_user_code = #{record.createUserCode,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user_code = #{record.updateUserCode,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.garden.cfg.core.repository.entity.CfgItem">
    update cfg_item
    <set>
      <if test="docId != null">
        doc_id = #{docId,jdbcType=INTEGER},
      </if>
      <if test="key != null">
        `key` = #{key,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        `value` = #{value,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        `comment` = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        `position` = #{position,jdbcType=INTEGER},
      </if>
      <if test="text != null">
        `text` = #{text,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="createUserCode != null">
        create_user_code = #{createUserCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserCode != null">
        update_user_code = #{updateUserCode,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.garden.cfg.core.repository.entity.CfgItem">
    update cfg_item
    set doc_id = #{docId,jdbcType=INTEGER},
      `key` = #{key,jdbcType=VARCHAR},
      `value` = #{value,jdbcType=VARCHAR},
      `comment` = #{comment,jdbcType=VARCHAR},
      `position` = #{position,jdbcType=INTEGER},
      `text` = #{text,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      create_user_code = #{createUserCode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_code = #{updateUserCode,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>
</mapper>